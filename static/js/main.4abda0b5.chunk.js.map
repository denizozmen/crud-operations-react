{"version":3,"sources":["components/Form/EditDataForm.js","components/Form/AddDataForm.js","components/Modal/Modal.js","components/Button/ButtonAddData.js","components/Table/TableData.js","components/Header/logo.svg","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["EditUserForm","useContext","FormContext","currentUser","setEditing","updateUser","console","log","useState","user","setUser","useEffect","handleInputChange","event","target","name","value","onSubmit","preventDefault","id","type","onChange","description","amount","currency","AddDataForm","addUser","initialFormState","operationDate","format","Date","Modal","show","close","editing","className","style","transform","opacity","onClick","EditDataForm","ButtonAddData","setShow","setCurrentUser","closeModalHandler","TableData","editRow","users","deleteUser","length","map","colSpan","Header","src","logo","alt","createContext","App","setUsers","Provider","updatedUser","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4abda0b5.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { FormContext } from \"../../App\";\r\nimport \"./Forms.css\";\r\n\r\nconst EditUserForm = () => {\r\n  const { setEditing, currentUser, updateUser } = useContext(FormContext);\r\n\r\n  console.log(currentUser);\r\n\r\n  const [user, setUser] = useState(currentUser);\r\n\r\n  useEffect(() => {\r\n    setUser(currentUser);\r\n  }, [currentUser]);\r\n  // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        updateUser(user.id, user);\r\n      }}\r\n    >\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={user.name}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Description</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"description\"\r\n        value={user.description}\r\n        onChange={handleInputChange}\r\n      />\r\n\r\n      <label>Amount</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        value={user.amount}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n\r\n      <label>Currency</label>\r\n      <select\r\n        type=\"text\"\r\n        name=\"currency\"\r\n        value={user.currency}\r\n        onChange={handleInputChange}\r\n      >\r\n        <option value=\"TRY\">TRY</option>\r\n        <option value=\"USD\">USD</option>\r\n        <option value=\"EUR\">EUR</option>\r\n      </select>\r\n\r\n      <button id=\"ButtonUpdate\">Update Data</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserForm;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { FormContext } from \"../../App\";\r\nimport { format } from \"date-fns\";\r\nimport \"./Forms.css\";\r\n\r\nconst AddDataForm = () => {\r\n  const { addUser } = useContext(FormContext);\r\n\r\n  const initialFormState = {\r\n    id: null,\r\n    name: \"\",\r\n    description: \"\",\r\n    operationDate: format(new Date(), \"MM.dd.yyyy\"),\r\n    amount: \"\",\r\n    currency: \"\",\r\n  };\r\n  const [user, setUser] = useState(initialFormState);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        if (!user.name || !user.description || !user.amount || !user.currency)\r\n          return;\r\n\r\n        addUser(user);\r\n        setUser(initialFormState);\r\n        console.log(user);\r\n      }}\r\n    >\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={user.name}\r\n        onChange={handleInputChange}\r\n      />\r\n\r\n      <label>Description</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"description\"\r\n        value={user.description}\r\n        onChange={handleInputChange}\r\n      />\r\n\r\n      <label>Amount</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        value={user.amount}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n\r\n      <label>Currency</label>\r\n      <select\r\n        type=\"text\"\r\n        name=\"currency\"\r\n        value={user.currency}\r\n        onChange={handleInputChange}\r\n      >\r\n        <option value=\"TRY\">TRY</option>\r\n        <option value=\"USD\">USD</option>\r\n        <option value=\"EUR\">EUR</option>\r\n      </select>\r\n\r\n      <button id=\"ButtonAddData\">Add Data</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddDataForm;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Modal.css\";\r\nimport { Fragment } from \"react\";\r\nimport EditDataForm from \"../Form/EditDataForm\";\r\nimport AddDataForm from \"../Form/AddDataForm\";\r\nimport { FormContext } from \"../../App\";\r\n\r\nexport const Modal = ({ show, close }) => {\r\n  const { editing } = useContext(FormContext);\r\n  return (\r\n    <div\r\n      className=\"modal-wrapper\"\r\n      style={{\r\n        transform: show ? \"translateY(0vh)\" : \"translateY(-100vh)\",\r\n        opacity: show ? \"1\" : \"0\",\r\n      }}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <p>Operations</p>\r\n        <span onClick={close} className=\"close-modal-btn\">\r\n          x\r\n        </span>\r\n      </div>\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-body\">\r\n          <div className=\"flex-large\">\r\n            {editing ? (\r\n              <Fragment>\r\n                <h2>Edit Data</h2>\r\n                <EditDataForm />\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <h2>Add Data</h2>\r\n                <AddDataForm />\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <button onClick={close} className=\"btn-cancel\">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { button } from \"react\";\r\nimport \"./ButtonAddData.css\";\r\nimport { FormContext } from \"../../App\";\r\n\r\nimport { Modal } from \"../Modal/Modal\";\r\n\r\nconst ButtonAddData = () => {\r\n  const { show, setShow, setCurrentUser, setEditing } = useContext(FormContext);\r\n\r\n  const initialFormState = {\r\n    id: null,\r\n    name: \"\",\r\n    description: \"\",\r\n    operationDate: \"\",\r\n    amount: \"\",\r\n    currency: \"\",\r\n  };\r\n\r\n  const closeModalHandler = () => setShow(false);\r\n\r\n  const ShowAddUser = () => {\r\n    setShow(true);\r\n    setCurrentUser(initialFormState);\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {show ? (\r\n        <div onClick={closeModalHandler} className=\"back-drop\"></div>\r\n      ) : null}\r\n      <button onClick={ShowAddUser} className=\"btn-openModal\">\r\n        Add Data\r\n      </button>\r\n      <Modal show={show} close={closeModalHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonAddData;\r\n","import React, { useContext } from \"react\";\r\nimport { FormContext } from \"../../App\";\r\nimport \"./TableData.css\";\r\n\r\nconst TableData = () => {\r\n  const { editRow, users, deleteUser, setShow } = useContext(FormContext);\r\n\r\n  return (\r\n    <table id=\"DataTable\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Description</th>\r\n          <th>OperationDate</th>\r\n          <th>Amount</th>\r\n          <th>Operations</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.length > 0 ? (\r\n          users.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.description}</td>\r\n              <td>{user.operationDate}</td>\r\n              <td>\r\n                {user.currency}\r\n                {user.amount}\r\n              </td>\r\n\r\n              <td>\r\n                <button\r\n                  id=\"ButonEdit\"\r\n                  onClick={() => {\r\n                    editRow(user);\r\n                    setShow(true);\r\n                  }}\r\n                ></button>\r\n                <button\r\n                  id=\"ButonDelete\"\r\n                  onClick={() => deleteUser(user.id)}\r\n                ></button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td colSpan={3}>No users</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"logoreact\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <h1 className=\"head\">CRUD Operations</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, createContext } from \"react\";\nimport ButtonAddData from \"./components/Button/ButtonAddData\";\nimport TableData from \"./components/Table/TableData\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\n\nexport const FormContext = createContext();\n\nfunction App() {\n  const usersData = [\n    {\n      id: 1,\n      name: \"Robert\",\n      description: \"floppydiskette\",\n      operationDate: \"04.02.2020\",\n      amount: \"300\",\n      currency: \"TRY\",\n    },\n    {\n      id: 2,\n      name: \"Craig\",\n      description: \"floppydiskette\",\n      operationDate: \"04.02.2020\",\n      amount: \"500\",\n      currency: \"USD\",\n    },\n    {\n      id: 3,\n      name: \"Ben\",\n      description: \"floppydiskette\",\n      operationDate: \"04.02.2020\",\n      amount: \"400\",\n      currency: \"EUR\",\n    },\n  ];\n\n  const [show, setShow] = useState(false);\n\n  const initialFormState = {\n    id: null,\n    name: \"\",\n    description: \"\",\n    operationDate: \"\",\n    amount: \"\",\n    currency: \"\",\n  };\n\n  // Setting state\n  const [users, setUsers] = useState(usersData);\n  const [currentUser, setCurrentUser] = useState(initialFormState);\n  const [editing, setEditing] = useState(false);\n\n  // CRUD operations\n  const addUser = (user) => {\n    user.id = users.length + 1;\n    setUsers([...users, user]);\n  };\n\n  const deleteUser = (id) => {\n    setEditing(false);\n\n    setUsers(users.filter((user) => user.id !== id));\n  };\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false);\n\n    setUsers(users.map((user) => (user.id === id ? updatedUser : user)));\n  };\n\n  const editRow = (user) => {\n    setEditing(true);\n\n    setCurrentUser({\n      id: user.id,\n      name: user.name,\n      description: user.description,\n      operationDate: user.operationDate,\n      amount: user.amount,\n      currency: user.currency,\n    });\n  };\n\n  return (\n    <FormContext.Provider\n      value={{\n        editing,\n        setEditing,\n        currentUser,\n        updateUser,\n        addUser,\n        editRow,\n        deleteUser,\n        users,\n        show,\n        setShow,\n        setCurrentUser,\n      }}\n    >\n      <div>\n        <Header />\n        <ButtonAddData />\n        <TableData />\n      </div>\n    </FormContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}